@model Models.ViewModels.PurchaseOrderIndexViewModel

@{
    ViewData["Title"] = "Index";
}



<div class="displaybox">
    <div class="row">
        <div class="col-sm-12 col-md-3"><h3>Purchase Orders</h3> </div>
        <div class="col-sm-12 col-md-5">
            <a class="btn btn-block btn-primary Buton-Green" asp-action="Create">Create New</a>
        </div>
    </div>
</div>
<div class="displaybox">
    <div class="row">
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Index[0].Code)
            @if (Model.OrderBy == "Code")
            {
                switch (@Model.Order)
                {
                    case "Ascending":
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="Code"
                           asp-route-Order="Ascending">(Asc)</a>

                        break;
                    case "Descending":
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="Code"
                           asp-route-Order="Descending">(Desc)</a>
                        break;
                    default:
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="Code"
                           asp-route-Order="Ascending">(Asc)</a>
                        break;
                }
            }
            else
            {
                <a asp-controller="PurchaseOrder"
                   asp-action="IndexSorted"
                   asp-route-OrderBy="Code"
                   asp-route-Order="NotSorted">(----)</a>
            }

        </div>
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Index[0].DateRaised)
            @if (Model.OrderBy == "DateRaised")
            {
                switch (@Model.Order)
                {
                    case "Ascending":
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="DateRaised"
                           asp-route-Order="Ascending">(Asc)</a>
                        break;
                    case "Descending":
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="DateRaised"
                           asp-route-Order="Descending">(Desc)</a>
                        break;
                    default:
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="DateRaised"
                           asp-route-Order="Ascending">(Asc)</a>
                        break;
                }
            }
            else
            {
                <a asp-controller="PurchaseOrder"
                   asp-action="IndexSorted"
                   asp-route-OrderBy="DateRaised"
                   asp-route-Order="NotSorted">(----)</a>
            }


        </div>
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Index[0].Status)
            @if (Model.OrderBy == "Status")
            {
                switch (@Model.Order)
                {
                    case "Ascending":
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="Status"
                           asp-route-Order="Ascending">(Asc)</a>
                        break;
                    case "Descending":
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="Status"
                           asp-route-Order="Descending">(Desc)</a>
                        break;
                    default:
                        <a asp-controller="PurchaseOrder"
                           asp-action="IndexSorted"
                           asp-route-OrderBy="Status"
                           asp-route-Order="Ascending">(Asc)</a>
                        break;
                }
            }
            else
            {
                <a asp-controller="PurchaseOrder"
                   asp-action="IndexSorted"
                   asp-route-OrderBy="Status"
                   asp-route-Order="NotSorted">(----)</a>
            }

        </div>
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Index[0].Value)
        </div>
    </div>

</div>

<div class="setverticalscroll" style="height:500px;">   

    @foreach (var Ln in Model.Index)
    {

        <div class="displaybox">
            <div class="row ">
                <div class="col-md-2">
                    <a asp-action="Edit" asp-route-id="@Ln.PurchaseOrderID">@Html.DisplayFor(modelItem => Ln.Code)</a>
                </div>
                <div class="col-md-2">
                    @Html.DisplayFor(modelItem => Ln.DateRaised)
                </div>
                <div class="col-md-2">
                    <a asp-action="Status" asp-route-id="@Ln.PurchaseOrderID"> @Html.DisplayFor(modelItem => Ln.Status)</a>
                </div>
                <div class="col-md-2">
                    @Html.DisplayFor(model => Ln.Value)
                </div>

                <div class="col-md-2">
                    <a asp-action="EmailPO" asp-route-id="@Ln.PurchaseOrderID">Email PO</a>
                </div>
            </div>
        </div>
    }

</div>



